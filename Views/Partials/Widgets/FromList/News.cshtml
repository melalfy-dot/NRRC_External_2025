@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridContentModel>
@using Custom.ViewModel
@using NRRC_External_2025.Models.Custom
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IPublishedUrlProvider IPublishedUrlProvider


@if (Model is not null)
{
    var _Widget = (Widget_ItemsFromList)Model?.BlockGridItem?.Content;
    if (_Widget != null && _Widget.HideWidget is false)
    {
        var items = Model?.PublishedContentItem?
                         .ChildrenOfType(Dt_NewsItem.ModelTypeAlias)?
                         .Where(x => x.Value<bool>(nameof(Dt_NewsItem.Hide)) is false)
                          .OrderByDescending(p => p.Value<DateTime>(nameof(Dt_NewsItem.Date)))
                          .ToList();


        <div class="news py-5">
            <div class="px-0 px-xl-5">
                <div class="container-fluid">
                    <div class="d-flex justify-content-between align-items-center gap-3 mb-3">
                        @if (Model.isHomePage)
                        {
                             <h3 class="font-bold">@_Widget?.Title</h3>
                            var readMoreLink = _Widget?.ReadMoreLink.ToLinkURL("");
                            <a class="btn bg-transparent d-flex align-items-center gap-2 font-medium border" href="@_Widget?.ReadMoreLink.ToLinkURL("")">
                                <span>@_Widget?.ReadMoreLink?.Name</span>
                            </a>
                        }
                    </div>
                    <div class="py-4">
                        <div class="row gx-sm-4 gy-4">

                            @if (items != null && items.Count() > 0)
                            {
                                if (_Widget?.MaxRecords > 0)
                                {
                                    items = items?.Take(_Widget.MaxRecords).ToList();
                                }
                                foreach (Dt_NewsItem item in items)
                                {
                                    var ImageUrl = item?.Image?.Url(IPublishedUrlProvider);
                                    var imgAltText = item?.Image?.Value<string>(nameof(Image.AltText));

                                    <div class="col-sm-4 col-12">
                                        <div class="news-item border bg-white rounded-4 p-3 d-flex flex-column align-items-start">
                                            <div class="img rounded-4 mb-3 w-100">
                                                <img src="@ImageUrl" alt="@imgAltText" class="w-100" />
                                            </div>
                                            <div class="flex-grow-1 mb-3">
                                                <h5 class=" font-bold">@item.ToPageTitle()</h5>
                                                <p>
                                                    @item?.Description
                                                </p>
                                            </div>
                                            <a class="btn bg-white d-flex align-items-center gap-2 font-medium border text-black" href="@item?.Url(IPublishedUrlProvider)">
                                                <i class="bi bi-arrow-right"></i>
                                            </a>
                                            @* <button class="btn bg-white d-flex align-items-center gap-2 font-medium border text-black">
                                                <i class="bi bi-arrow-right"></i>
                                            </button> *@
                                        </div>
                                    </div>
                                }

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }


}


