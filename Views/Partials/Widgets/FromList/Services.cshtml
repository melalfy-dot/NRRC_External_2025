@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridContentModel>
@using Custom.ViewModel
@using NRRC_External_2025.Models.Custom
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IPublishedUrlProvider IPublishedUrlProvider

@if (Model is not null)
{
    var isArabic = System.Globalization.CultureInfo.CurrentCulture.Name.Equals("ar", StringComparison.OrdinalIgnoreCase);
    var _Widget = (Widget_ItemsFromList)Model?.BlockGridItem?.Content;
    if (_Widget != null && _Widget.HideWidget is false)
    {
        var items = Model?.PublishedContentItem?
            .ChildrenOfType(Dt_ServicesItem.ModelTypeAlias)?
            .Where(x => x.Value<bool>(nameof(Dt_ServicesItem.Hide)) is false)
            .OrderByDescending(p => p.Value<DateTime>(nameof(Dt_ServicesItem.ItemOrder)))
            .ToList();

        <div class="bg-gray py-5 services">
            <div class="px-0 px-xl-5">
                <div class="container-fluid">
                    <div class="d-flex justify-content-between align-items-center gap-3 mb-3">
                        <h3 class="font-bold">@_Widget.Title </h3>
                        <a href="@_Widget.ReadMoreLink?.ToLinkURL()" class="btn bg-transparent d-flex align-items-center gap-2 font-bold border">
                            <span>@_Widget.ReadMoreLink?.Name </span>
                        </a>
                    </div>
                    <p class="mb-4">
                        @_Widget.Details
                    </p>

                    <div class="py-4">
                        <div class="owl-carousel owl-theme owl-services">
                            @if (items != null && items.Any())
                            {
                                if (_Widget?.MaxRecords > 0)
                                {
                                    items = items.Take(_Widget.MaxRecords).ToList();
                                }
                                foreach (Dt_ServicesItem item in items)
                                {
                                    var ImageUrl = item?.Icon?.Url(IPublishedUrlProvider);
                                    var imgAltText = item?.Icon?.Value<string>(nameof(Image.AltText));

                                    <div class="item">
                                        <div class="service-item border bg-white rounded-4 p-3 d-flex flex-column align-items-start">
                                            <div class="icon bg-green2 rounded-circle d-flex align-items-center justify-content-center mb-4">
                                                <img src="@ImageUrl" alt="@imgAltText" width="22" height="22" />
                                            </div>
                                            <h5 class="font-bold mb-2">
                                                <a href="@item.Url(IPublishedUrlProvider)">@item.ToPageTitle()</a>
                                            </h5>
                                            <p class="flex-grow-1">@item.Description</p>
                                            <ul class="d-flex gap-2 flex-wrap mb-4 px-0 mt-1 small font-medium">
                                                @if (item?.Category is not null)
                                                {
                                                    foreach (var blocListItem in item.Category)
                                                    {
                                                        var categoryItem = (ServiceCategory)blocListItem.Content;
                                                        var title = isArabic ?
                                                        categoryItem.Category?.Value<string>(nameof(LookupItem.TitleAr)) :
                                                        categoryItem.Category?.Value<string>(nameof(LookupItem.TitleEn));
                                                        var cssClass = categoryItem.Category?.Value<string>(nameof(LookupItem.CssClass)) ?? "border-gray-100 bg-gray-100";
                                                        <li class="border rounded-2 p-2 py-1 @cssClass">@title</li>
                                                    }
                                                }
                                            </ul>
                                            <a class="btn bg-white d-flex align-items-center gap-2 font-medium border text-black" href="@item.Url(IPublishedUrlProvider)">
                                                إبدأ الخدمة
                                                <i class="bi bi-arrow-right"></i>
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
