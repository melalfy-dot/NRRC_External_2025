@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridContentModel>
@using Custom.ViewModel
@using NRRC_External_2025.Models.Custom
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IPublishedUrlProvider IPublishedUrlProvider


@if (Model is not null)
{
    var _Widget = (Widget_ItemsFromList)Model?.BlockGridItem?.Content;
    if (_Widget != null && _Widget.HideWidget is false)
    {

        var items = Model?.PublishedContentItem?
       .ChildrenOfType(Dt_VersionsItem.ModelTypeAlias)?
       .Where(x => x.Value<bool>(nameof(Dt_VersionsItem.Hide)) is false)
        .OrderByDescending(p => p.Value<DateTime>(nameof(Dt_VersionsItem.Date)))
        .ToList();



        <div class="bg-light py-5 publications">
            <div class="px-0 px-xl-5">
                <div class="container-fluid">
                    <div class="d-flex justify-content-between align-items-center gap-3 mb-3">
                        @if (Model.isHomePage)
                        {
                            <h3 class="font-bold">@_Widget?.Title</h3>
                            var readMoreLink = _Widget?.ReadMoreLink.ToLinkURL("");
                            <a class="btn bg-transparent d-flex align-items-center gap-2 font-bold border" href="@_Widget?.ReadMoreLink.ToLinkURL("")">
                                <span>@_Widget?.ReadMoreLink?.Name</span>
                            </a>
                        }
                    </div>
                    <div class="py-4">
                        <div class="owl-carousel owl-theme owl-publications">

                            @if (items != null && items.Count() > 0)
                            {
                                if (_Widget?.MaxRecords > 0)
                                {
                                    items = items?.Take(_Widget.MaxRecords).ToList();
                                }
                                foreach (Dt_VersionsItem item in items)
                                {
                                    var ImageUrl = item?.Image?.Url(IPublishedUrlProvider);
                                    var imgAltText = item?.Image?.Value<string>(nameof(Image.AltText));
                                    <div class="item">
                                        <div class="publications-item border bg-white rounded-4 p-3 d-flex flex-column align-items-start">
                                            <div class="icon bg-green2 rounded-circle d-flex align-items-center justify-content-center mb-4">
                                                <img src="/images/pdf-white-icon.svg" alt="pdf icon" width="20" height="22" />
                                            </div>
                                            <h5 class="mb-4 font-bold">
                                                @item.ToPageTitle()
                                            </h5>
                                            <a class="btn bg-white d-flex align-items-center gap-2 font-medium border text-black" href="@item?.File.Url(IPublishedUrlProvider)">
                                                <i class="bi bi-arrow-right"></i>
                                            </a>
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>


    }
}


