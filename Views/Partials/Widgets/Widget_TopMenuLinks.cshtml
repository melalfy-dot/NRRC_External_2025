@using Umbraco.Cms.Core.Routing
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<BlockGridItem>
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider IPublishedUrlProvider

@{
    var _Widget = (Widget_TopMenuLinks)Model.Content;



    <div class="bg-gray py-2 top-toggle">
        <div class="container-fluid">
            <div class="px-xl-5 px-0">
                <div class="d-flex gap-2 flex-wrap">
                    @{
                        var accordionTitle = @_Widget.AccordionTitle;
                        var verifyLinkText = @_Widget.VerifyLinkText;
                        var accordionTitleImageUrl = _Widget?.AccordionTitleImage?.Url(IPublishedUrlProvider);

                        var rightItemTitle = _Widget?.RightItemTitle;
                        var rightItemDescription = _Widget?.RightItemDescription;
                        var rightItemIconUrl = _Widget?.RightItemIcon?.Url(IPublishedUrlProvider);

                        var leftItemTitle = _Widget?.LeftItemTitle;
                        var leftItemDescription = _Widget?.LeftItemDescription;
                        var reftItemIconUrl = _Widget?.LeftItemIcon?.Url(IPublishedUrlProvider);

                        var bottomItemTitle = _Widget?.BottomItemTitle;
                        var bottomItemMobile = _Widget?.BottomItemMobile;
                        var bottomItemIconUrl = _Widget?.BottomItemIcon?.Url(IPublishedUrlProvider);

                    }
                    <div class="flag-icon"><img src="@accordionTitleImageUrl" data-uw-rm-alt-original="" role="presentation" alt="" data-uw-rm-alt="SVG"></div>
                    <small id="officialSiteLabel" class="font-medium">
                        @accordionTitle
                    </small>
                    <a id="verifyLink" href="#digitalStampBox" class="text-green check-link small" data-bs-toggle="collapse" aria-expanded="false" data-uw-original-href="#digitalStampBox">
                        @verifyLinkText
                    </a>
                </div>

                <div id="digitalStampBox" class="collapse">
                    <div class="row gx-sm-5 py-4">
                        <div class="col-lg-6 col-12">
                            <div class="item d-flex align-items-start gap-3">
                                <div class="icon border border-green rounded-circle">
                                    <img src="@rightItemIconUrl" data-uw-rm-alt-original="" role="presentation" alt="" data-uw-rm-alt="SVG">
                                </div>
                                <div class="flex-grow-1">
                                    <h6 id="trustedTitle" class="font-semibold text-dark mb-2" role="heading" aria-level="1" data-uw-rm-heading="level">
                                        @rightItemTitle
                                    </h6>
                                    <p id="trustedDesc" class="text-secondary mb-0">
                                        @rightItemDescription
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6 col-12">
                            <div class="item d-flex align-items-start gap-3">
                                <div class="icon border border-green rounded-circle">
                                    <img src="@reftItemIconUrl" data-uw-rm-alt-original="" role="presentation" alt="" data-uw-rm-alt="SVG">
                                </div>
                                <div class="flex-grow-1">
                                    <h6 id="httpsTitle" class="font-semibold text-dark mb-2" role="heading" aria-level="2" data-uw-rm-heading="level">
                                        @leftItemTitle
                                    </h6>
                                    <p id="httpsDesc" class="text-secondary mb-0">
                                        @leftItemDescription
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="bg-white rounded-2 p-2 d-flex gap-3 align-items-center mt-4">
                                <img src="@bottomItemIconUrl" data-uw-rm-alt-original="" alt="مسجل لدى هيئة الحكومة الرقمية برقم :" data-uw-rm-alt="CT">
                                <p id="digitalStampText" class="mb-0">
                                    @bottomItemTitle <a href="http://raqmi.dga.gov.sa/platforms/DigitalStamp/ShowCertificte/2937" class="text-green" data-uw-rm-brl="PR" data-uw-original-href="http://raqmi.dga.gov.sa/platforms/DigitalStamp/ShowCertificte/2937">@bottomItemMobile</a>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





    <div class="bg-green top-header py-2 d-none d-xxl-flex">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center px-xl-5 flex-wrap">
                @if (_Widget != null && _Widget.Links != null && _Widget.Links.Count > 0 && _Widget.HideWidget is false)
                {
                    var AllMenus = _Widget.Links.Where(a => !a.Content.Value<Boolean>(nameof(Widget_ListOfLinks.HideWidget)));
                    if (AllMenus != null && AllMenus.Count() > 0)
                    {
                        var Menu_WarningLink = AllMenus?.FirstOrDefault(a => a.Content.Value<string>(nameof(Widget_ListOfLinks.Category)) == "Warning Link");
                        var Menu_Right = AllMenus?.FirstOrDefault(a => a.Content.Value<string>(nameof(Widget_ListOfLinks.Category)) == "TopMenu Right");
                        var Menu_Left = AllMenus?.FirstOrDefault(a => a.Content.Value<string>(nameof(Widget_ListOfLinks.Category)) == "TopMenu Left");
                        draw_MenuLinks(Menu_Right, Menu_WarningLink);
                        draw_MenuLinks(Menu_Left);
                    }
                }
            </div>
        </div>
    </div>
}

@{
    void draw_MenuLinks(BlockListItem? MenuLinks, BlockListItem? warningLinks = null)
    {
        if (MenuLinks != null)
        {
            var categoryLinks_Content = (Widget_ListOfLinks)MenuLinks.Content;
            var links = categoryLinks_Content.Links?.Where(a => a.Content.Value<Boolean>(nameof(LinkItem.Hide)) is false);
            <ul class="list-unstyled d-flex gap-3 align-items-center">
                @if (warningLinks != null)
                {
                    var WarningLinks_Content = (Widget_ListOfLinks)warningLinks.Content;
                    var WarningLinks = WarningLinks_Content.Links?.Where(a => a.Content.Value<Boolean>(nameof(LinkItem.Hide)) is false);
                    @if (WarningLinks != null)
                    {
                        foreach (var item in WarningLinks)
                        {
                            var _Item = (LinkItem)item.Content;
                            var imgUrl = _Item?.IconOrImage?.Url(IPublishedUrlProvider);
                            var imgAltText = _Item?.IconOrImage?.Value<string>(nameof(Image.AltText));
                            <li>
                                <a href="@_Item?.Link?.Url" target="@_Item?.Link?.Target" class="d-flex align-items-center gap-2 text-danger bg-danger-light rounded-2 px-3 py-1">
                                    <img src="@imgUrl" alt="@imgAltText" width="16" height="16">
                                    <span class="small font-medium">@_Item?.Title</span>
                                </a>
                            </li>
                        }
                    }
                }


                @if (links != null)
                {
                    foreach (var item in links)
                    {
                        var _Item = (LinkItem)item.Content;
                        var imgUrl = _Item?.IconOrImage?.Url(IPublishedUrlProvider);
                        var imgAltText = _Item?.IconOrImage?.Value<string>(nameof(Image.AltText));
                        <li>
                            <a href="@_Item?.Link?.Url" target="@_Item?.Link?.Target" class="d-flex align-items-center gap-2">
                                <img src="@imgUrl" alt="@imgAltText" width="16" height="16">

                                <span class="small font-medium">@_Item?.Title</span>
                            </a>
                        </li>
                    }
                }
            </ul>

        }

    }
}