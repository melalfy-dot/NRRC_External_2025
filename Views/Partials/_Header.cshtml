@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions

@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var currentPage = Umbraco.AssignedContentItem;
    var master = Umbraco.ContentAtRoot().FirstOrDefault(a => a.ContentType.Alias == Dt_HomePage.ModelTypeAlias); // Assuming the first node is the home page
    bool isHome = currentPage != null && currentPage.Id == master?.Id;
    bool IsArabic = true;
    string Lang = "ar";
    string Lang_URL = "";
    var OtherLangText = "EN";
    var OtherLangUrl = Model?.Url("en-US");

    List<string> types = new List<string>();
    IEnumerable<IPublishedContent> selection = null;
    var rootUrl = Model?.Root()?.Url();

    try
    {

        if (Model != null && Model.GetCultureFromDomains() != null && !string.IsNullOrEmpty(Model.GetCultureFromDomains()))
        {
            if (Model.GetCultureFromDomains().ToLower().Contains("en"))
            {
                IsArabic = false;
                Lang_URL = "/en";
            }
            else
            {
                IsArabic = true;
                Lang_URL = "";
            }
        }

        Lang = IsArabic ? "ar" : "en";
        OtherLangText = IsArabic ? "E" : "ع";
        OtherLangUrl = IsArabic ? Model?.Url("en-US") : Model?.Url("ar");

        types.Add(Dt_PageContent.ModelTypeAlias);
        types.Add(Dt_News.ModelTypeAlias);
        types.Add(Dt_Events.ModelTypeAlias);

        if (master != null)
        {
            selection = master.Children
                             .Where(x =>
                                 x.IsVisible(PublishedValueFallback) &&
                                 types.Contains(x.ContentType.Alias))
                             .Where(x => x.Value<Boolean>(nameof(PageProperties.ShowInMainMenu)) == true)
                             .ToArray();
        }

    }
    catch (Exception ex)
    {
        SharedHelper.LogException(ex);
    }
}


<header class="sticky-top">
    @{
        var TopMenuLinks_BlockGridItem = ((Dt_HomePage)master)
                                        .TopMenuPageWidgets?
                                         .FirstOrDefault(a => a.Content.ContentType.Alias==Widget_TopMenuLinks.ModelTypeAlias);
        if (TopMenuLinks_BlockGridItem != null)
        {
            var partialViewName = "/Views/Partials/Widgets/" + TopMenuLinks_BlockGridItem.Content.ContentType.Alias + ".cshtml";

            @await Html.PartialAsync(partialViewName, TopMenuLinks_BlockGridItem)
        }
    }
    <div class="bg-white px-0 px-xl-5 border-bottom position-relative">
        <nav class="navbar navbar-expand-xxl py-0">
            <div class="container-fluid align-items-stretch">
                <a class="navbar-brand py-3" href="@rootUrl">
                    <img src="/images/logo_nrrc.png" />
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasMenu" aria-controls="offcanvasMenu" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse align-items-stretch mainMenu" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto ms-3">
                        @{
                            BuildMenu();
                        }
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link font-medium" data-bs-toggle="collapse" href="#collapseSearch" role="button" aria-expanded="false" aria-controls="collapseSearch">
                                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20C12.4013 20 14.6049 19.1536 16.3287 17.7429L20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L17.7429 16.3287C19.1536 14.6049 20 12.4013 20 10C20 4.47715 15.5228 0 10 0ZM2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10Z" fill="#161616" />
                                </svg>
                            </a>

                        </li>
                        <li class="nav-item">
                            <a href="@OtherLangUrl" class="nav-link font-medium">@OtherLangText</a>
                        </li>

                    </ul>
                </div>
            </div>
        </nav>
        <div class="collapse py-4 header-search-box px-xl-5 border-top" id="collapseSearch">
            <div class="container-fluid py-4">
                <div class="d-flex justify-content-end py-3">
                    <a class="close-header-search" data-bs-toggle="collapse" href="#collapseSearch" role="button" aria-expanded="false" aria-controls="collapseSearch">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M8 6.26225L14.0123 0.25L15.75 1.98775L9.73775 8L15.75 14.0123L14.0123 15.75L8 9.73775L1.98775 15.75L0.25 14.0123L6.26225 8L0.25 1.98775L1.98775 0.25L8 6.26225Z" fill="#161616" />
                        </svg>

                    </a>
                </div>
                <div class="d-flex gap-3 align-items-center w-100 my-4">
                    <div class="border d-flex gap-3 rounded-2 align-items-center px-3 flex-grow-1">
                        <span>
                            <svg width="20" height="20" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20C12.4013 20 14.6049 19.1536 16.3287 17.7429L20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L17.7429 16.3287C19.1536 14.6049 20 12.4013 20 10C20 4.47715 15.5228 0 10 0ZM2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10Z" fill="#161616" />
                            </svg>
                        </span>
                        <input type="text" class="form-control border-0 bg-transparent rounded-2">
                    </div>
                    <button type="submit" class="btn bg-green rounded-2 text-white p-3 py-2 font-medium">
                        search
                    </button>
                </div>

            </div>

        </div>
        <!-- Mobile Menu -->
        <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasMenu" aria-labelledby="offcanvasMenuLabel">
            <div class="offcanvas-header">
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <ul class="navbar-nav mainMenu">
                    @{
                        BuildMenu();
                    }

                </ul>
                <ul class="navbar-nav d-flex flex-row mainMenu">
                    <li class="nav-item" data-bs-dismiss="offcanvas">
                        <a class="nav-link font-medium justify-content-center" data-bs-toggle="collapse" href="#collapseSearch" role="button" aria-expanded="false" aria-controls="collapseSearch">
                            <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20C12.4013 20 14.6049 19.1536 16.3287 17.7429L20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L17.7429 16.3287C19.1536 14.6049 20 12.4013 20 10C20 4.47715 15.5228 0 10 0ZM2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10Z" fill="#161616" />
                            </svg>
                        </a>

                    </li>
                    <li class="nav-item">
                        <a href="@OtherLangUrl" class="nav-link font-medium justify-content-center">@OtherLangText</a>
                    </li>

                </ul>
            </div>
        </div>
    </div>
</header>

@{
    void BuildMenu()
    {
        @if (selection != null)
        {
            foreach (var item in selection)
            {
                var redirectURL = item.Value("redirectURL").ToLinkURL("");
                IPublishedContent[]? children = null;

                children = item.Children?
                .Where(x => x.IsVisible(PublishedValueFallback) && types.Contains(x.ContentType.Alias))
                .Where(x => x.Value<Boolean>(nameof(PageProperties.ShowInMainMenu)) == true)
                .ToArray();

                var itemLink = string.IsNullOrEmpty(redirectURL) ? item.Url(PublishedUrlProvider) : redirectURL;
                if (children?.Length > 0)
                {
                    itemLink = "#";
                }
                var parent = currentPage?.Parent;

                var selected = currentPage?.Id == item?.Id || currentPage?.Parent?.Id == item?.Id ? "selected" : "";
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle font-medium @selected" href="@itemLink#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        @item.ToPageTitle()
                    </a>
                    @if (children?.Length > 0)
                    {
                        <ul class="dropdown-menu">
                            @foreach (var childItem in children)
                            {
                                var childItemLink = childItem.Url(PublishedUrlProvider);
                                <li>
                                    <a class="dropdown-item" href="@childItemLink">
                                        @childItem.ToPageTitle()
                                    </a>
                                </li>
                            }

                        </ul>
                    }
                </li>
            }
        }

    }

}

